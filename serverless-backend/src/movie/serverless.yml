getMovies:
  handler: src/movie/getMovies/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:Query
      Resource:
        Fn::GetAtt:
          - MoviesTable
          - Arn
  environment:
    TABLE_NAME:
      Ref: MoviesTable
  events:
    - http:
        method: get
        path: /v1/movies
    - http:
        method: get
        path: /v1/movies/{movieID}
#    SNS_TOPIC:
#      Ref: SubscriptionCreatedTopic
#    - Effect: Allow
#      Action: sns:Publish
#      Resource:
#        - Ref: SubscriptionCreatedTopic

getFavorites:
  handler: src/movie/getFavorites/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:Query
      Resource:
        Fn::GetAtt:
          - MoviesTable
          - Arn
  environment:
    TABLE_NAME:
      Ref: MoviesTable
  events:
    - http:
        method: get
        path: /v1/favorites
        authorizer:
          name: COGNITO_AUTHORIZER
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayCognitoAuthorizer
#    - http:
#        method: get
#        path: /v1/movies/{movieID}
#        authorizer:
#          name: COGNITO_AUTHORIZER
#          type: COGNITO_USER_POOLS
#          authorizerId:
#            Ref: ApiGatewayCognitoAuthorizer

addFavorite:
  handler: src/movie/addFavorite/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:BatchWriteItem
      Resource:
        Fn::GetAtt:
          - MoviesTable
          - Arn
  environment:
    TABLE_NAME:
      Ref: MoviesTable
  events:
    - http:
        method: post
        path: /v1/movies
        authorizer:
          name: COGNITO_AUTHORIZER
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayCognitoAuthorizer
